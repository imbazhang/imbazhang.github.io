<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>imbazhang的博客</title>
  <icon>https://www.gravatar.com/avatar/40625f0c836e6453482df1bcd9f1a2a8</icon>
  <subtitle>摸鱼一时爽，一直摸鱼一直爽。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="imbazhang.github.io/"/>
  <updated>2019-11-26T07:06:47.688Z</updated>
  <id>imbazhang.github.io/</id>
  
  <author>
    <name>imbazhang</name>
    <email>imbazhangyx@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Contest-172-E</title>
    <link href="imbazhang.github.io/2019/11/26/Contest172E/"/>
    <id>imbazhang.github.io/2019/11/26/Contest172E/</id>
    <published>2019-11-26T06:24:16.000Z</published>
    <updated>2019-11-26T07:06:47.688Z</updated>
    
    <content type="html"><![CDATA[<p>正好很长时间没管这边了，趁这个机会水一篇</p><h5 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h5><p>1e3*1e3 的迷宫里面挖宝，有两种方式前进：一次前进一步或者一次前进 <strong>r</strong>步。求最早到达目标点的 <strong>index</strong> ，可以存在多解。</p><p>思路很简单，直接BFS搜就行了。EOJ连不上判题服务器，但是样例测了没问题。</p><p>UPDATE：出锅了，待修。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> clang diagnostic push</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> ide diagnostic ignored <span class="meta-string">"cert-err34-c"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> ide diagnostic ignored <span class="meta-string">"hicpp-signed-bitwise"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, r;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">int</span> G[<span class="number">1005</span>][<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> now = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">1005</span>][<span class="number">1005</span>], flag = <span class="literal">false</span>;</span><br><span class="line"><span class="built_in">queue</span>&lt;pair&lt;pii, <span class="keyword">int</span>&gt; &gt; q[<span class="number">2</span>]; <span class="comment">// NOLINT(cert-err58-cpp)</span></span><br><span class="line">pii tar;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line"><span class="built_in">queue</span>&lt;pii&gt; rec;</span><br><span class="line">pii dirc[<span class="number">4</span>] = &#123;&#123;<span class="number">0</span>,  <span class="number">1</span>&#125;,</span><br><span class="line">               &#123;<span class="number">0</span>,  <span class="number">-1</span>&#125;,</span><br><span class="line">               &#123;<span class="number">1</span>,  <span class="number">0</span>&#125;,</span><br><span class="line">               &#123;<span class="number">-1</span>, <span class="number">0</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (!q[now].empty()) &#123;</span><br><span class="line">        pii sta = q[now].front().first;</span><br><span class="line">        <span class="keyword">if</span> (sta == tar) &#123;</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">            ans.push(q[now].front().second);</span><br><span class="line">            q[now].pop();</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : dirc) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!vis[sta.first + i.first][sta.second + i.second]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (G[sta.first + i.first][sta.second + i.second] == <span class="number">0</span> ||</span><br><span class="line">                    G[sta.first + i.first][sta.second + i.second] == <span class="number">-2</span>) &#123;</span><br><span class="line">                    q[now ^ <span class="number">1</span>].push(</span><br><span class="line">                            make_pair(make_pair(sta.first + i.first, </span><br><span class="line">                            sta.second + i.second), q[now].front().second));</span><br><span class="line">                    rec.push(make_pair(sta.first + i.first, sta.second + i.second));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (r != <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : dirc) &#123;</span><br><span class="line">                <span class="keyword">bool</span> tag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i1 = <span class="number">1</span>; i1 &lt;= r; i1++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (G[sta.first + i1 * i.first][sta.second + i1 * i.second] == <span class="number">-1</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (!vis[sta.first + (i1 - <span class="number">1</span>) * i.first][sta.second + (i1 - <span class="number">1</span>) * i.second] </span><br><span class="line">                      &amp;&amp; i1 != <span class="number">2</span>) &#123;</span><br><span class="line">                            q[now ^ <span class="number">1</span>].push(make_pair(make_pair(sta.first + (i1 - <span class="number">1</span>) * i.first, sta.second + (i1 - <span class="number">1</span>) * i.second),</span><br><span class="line">                                                      q[now].front().second));</span><br><span class="line"><span class="comment">//                            cout &lt;&lt; "insert" &lt;&lt; sta.first + (i1 - 1) * i.first &lt;&lt; ' ' &lt;&lt; sta.second + (i1 - 1) * i.second &lt;&lt; ' ' &lt;&lt; q[now].front().second &lt;&lt; endl;</span></span><br><span class="line">                            rec.push(make_pair(sta.first + (i1 - <span class="number">1</span>) * i.first, sta.second + (i1 - <span class="number">1</span>) * i.second));</span><br><span class="line">                        &#125;</span><br><span class="line">                        tag = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (!tag &amp;&amp; !vis[sta.first + r * i.first][sta.second + r * i.second]) &#123;</span><br><span class="line">                    q[now ^ <span class="number">1</span>].push(make_pair(make_pair(sta.first + r * i.first, sta.second + r * i.second),</span><br><span class="line">                                              q[now].front().second));</span><br><span class="line"><span class="comment">//                    cout &lt;&lt; "insert" &lt;&lt; sta.first + r * i.first &lt;&lt; ' ' &lt;&lt; sta.second + r * i.second &lt;&lt; ' ' &lt;&lt; q[now].front().second &lt;&lt; endl;</span></span><br><span class="line">                    rec.push(make_pair(sta.first + r * i.first, sta.second + r * i.second));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        q[now].pop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag) <span class="keyword">return</span>;</span><br><span class="line">    cnt++;</span><br><span class="line">    now ^= <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (!rec.empty()) &#123;</span><br><span class="line">        vis[rec.front().first][rec.front().second] = <span class="literal">true</span>;</span><br><span class="line">        rec.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    bfs();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (!ans.empty()) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, ans.front());</span><br><span class="line">        ans.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n%d"</span>, cnt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="literal">false</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;n, &amp;m, &amp;r);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;G[i][j]);</span><br><span class="line">            <span class="keyword">if</span> (G[i][j] &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">                q[<span class="number">0</span>].push(make_pair(make_pair(i, j), G[i][j]));</span><br><span class="line">                vis[i][j] = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (G[i][j] == <span class="number">-2</span>) &#123;</span><br><span class="line">                tar.first = i;</span><br><span class="line">                tar.second = j;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (G[i][j] == <span class="number">-1</span>)</span><br><span class="line">                vis[i][j] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    cout &lt;&lt; tar.first &lt;&lt; ' ' &lt;&lt; tar.second &lt;&lt; endl;</span></span><br><span class="line">    bfs();</span><br><span class="line">    print();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> clang diagnostic pop</span></span><br></pre></td></tr></table></figure><p><em>Clion的自动提示还挺好玩</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;正好很长时间没管这边了，趁这个机会水一篇&lt;/p&gt;
&lt;h5 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h5&gt;&lt;p&gt;1e3*1e3 的迷宫里面挖宝，有两种方式前进：一次前进一步或者一次前进 &lt;stro
      
    
    </summary>
    
    
      <category term="BFS" scheme="imbazhang.github.io/tags/BFS/"/>
    
  </entry>
  
  <entry>
    <title>随想</title>
    <link href="imbazhang.github.io/2019/10/04/%E9%9A%8F%E6%83%B3/"/>
    <id>imbazhang.github.io/2019/10/04/随想/</id>
    <published>2019-10-04T03:52:23.000Z</published>
    <updated>2019-10-04T05:30:10.924Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/10/04/uBLEeH.png"></p><p>许愿：我喜欢的女孩子能遇到一个她爱的、也爱她的、足够优秀的男生啊。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/10/04/uBLEeH.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;许愿：我喜欢的女孩子能遇到一个她爱的、也爱她的、足够优秀的男生啊。&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CF1187B Letters Shop</title>
    <link href="imbazhang.github.io/2019/07/01/CF_edu57B/"/>
    <id>imbazhang.github.io/2019/07/01/CF_edu57B/</id>
    <published>2019-07-01T14:49:15.000Z</published>
    <updated>2019-07-01T15:00:54.830Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CF1187B-Letters-Shop-：前缀和"><a href="#CF1187B-Letters-Shop-：前缀和" class="headerlink" title="CF1187B Letters Shop ：前缀和"></a>CF1187B Letters Shop ：前缀和</h3><hr><p><del>终于水到B难度的题也要来写一写了？</del></p><p>摸了半个晚上，差点就被等号搞崩了心态。</p><p>题面：<a href="http://codeforces.com/contest/1187/problem/B" target="_blank" rel="noopener">http://codeforces.com/contest/1187/problem/B</a></p><h6 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h6><p>给出一个很长的主串，选取前缀，使得子串能够被前缀表示，要求给出最少选取的前缀位数。</p><hr><p>前缀和。26个小写字母进行处理，给出到达每一位时、每个字母出现的最多次数。预处理部分有点烦；问询的串需要处理每个字母出现的次数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, sum[<span class="number">26</span>], s[<span class="number">200005</span>][<span class="number">26</span>], t[<span class="number">200005</span>][<span class="number">26</span>];</span><br><span class="line"><span class="keyword">char</span> line[<span class="number">200005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, line+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;j++)</span><br><span class="line">            <span class="keyword">if</span> (j == line[i] -<span class="string">'a'</span>)</span><br><span class="line">                s[i][j] = s[i<span class="number">-1</span>][j]+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                s[i][j] = s[i<span class="number">-1</span>][j];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;j++)</span><br><span class="line">            t[i][j] = n + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;j++)</span><br><span class="line">            t[s[i][j]][j] = min(t[s[i][j]][j], i);</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, line+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++) sum[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> len = <span class="built_in">strlen</span>(line+<span class="number">1</span>), ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)</span><br><span class="line">            sum[line[i] - <span class="string">'a'</span>]++;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)</span><br><span class="line">            ans = max(ans, t[sum[i]][i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>闲片：</p><p>1.摸鱼比正事干得多</p><p>2.因为明天有安排，所以明天咕咕咕预定？</p><p>3.室友开始看统计学的书了，搞得我慌得不行…</p><p>4.数学偏科，没了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;CF1187B-Letters-Shop-：前缀和&quot;&gt;&lt;a href=&quot;#CF1187B-Letters-Shop-：前缀和&quot; class=&quot;headerlink&quot; title=&quot;CF1187B Letters Shop ：前缀和&quot;&gt;&lt;/a&gt;CF1187B Let
      
    
    </summary>
    
    
      <category term="Prefix" scheme="imbazhang.github.io/tags/Prefix/"/>
    
  </entry>
  
  <entry>
    <title>ECNU XCPC Training on CF Contest 2:Greedy 个人题解</title>
    <link href="imbazhang.github.io/2019/03/18/contest2_greedy/"/>
    <id>imbazhang.github.io/2019/03/18/contest2_greedy/</id>
    <published>2019-03-18T14:15:04.000Z</published>
    <updated>2019-03-19T10:59:05.234Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default"></script><h2 id="ECNU-XCPC-Training-on-CF-Contest-2-Greedy-个人题解"><a href="#ECNU-XCPC-Training-on-CF-Contest-2-Greedy-个人题解" class="headerlink" title="ECNU XCPC Training on CF Contest 2: Greedy 个人题解"></a>ECNU XCPC Training on CF Contest 2: Greedy 个人题解</h2><h2 id="总算不是自闭场了【-з」∠"><a href="#总算不是自闭场了【-з」∠" class="headerlink" title="总算不是自闭场了【(:з」∠)"></a>总算不是自闭场了【(:з」∠)</h2><p>题面：<a href="http://codeforces.com/group/ki6jEDpY8g/contest/240026" target="_blank" rel="noopener">http://codeforces.com/group/ki6jEDpY8g/contest/240026</a></p><h4 id="场内：四题（C-D-E-H）"><a href="#场内：四题（C-D-E-H）" class="headerlink" title="场内：四题（C, D, E, H）"></a>场内：四题（C, D, E, H）</h4><h5 id="C-Our-Tanya-is-Crying-Out-Loud"><a href="#C-Our-Tanya-is-Crying-Out-Loud" class="headerlink" title="C.Our Tanya is Crying Out Loud"></a>C.Our Tanya is Crying Out Loud</h5><h6 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h6><p>给出<strong><em>n, k, A, B</em></strong> 四个数字，要求对 <strong><em>x</em></strong> 通过两种操作：（1）每次将 <strong><em>x</em></strong> 减去1 （2）在 <strong><em>x</em></strong> 可以被 <strong><em>k</em></strong> 整除时，除 <strong><em>k</em></strong>。操作1的花销是<strong><em>A</em></strong>， 操作2的花销是<strong><em>B</em></strong>，求解使得 <strong><em>x</em></strong> 为1的最小花销</p><h6 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h6><p>在不能够整除 <strong><em>k</em></strong> 时，只能减去1；在可以整除 <strong><em>k</em></strong> 时，比较 整除一次的花销 和 每次减1到达 <strong><em>x/k</em></strong> 的花销</p><h6 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a>AC代码：</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,k,a,b,f1,f2,ans;</span><br><span class="line"><span class="keyword">int</span> kkk,aaa;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%I64d%I64d%I64d%I64d"</span>,&amp;n,&amp;k,&amp;a,&amp;b);</span><br><span class="line">    kkk=(b<span class="number">-1</span>)/a+<span class="number">1</span>; <span class="comment">//????</span></span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">1</span>) &#123;</span><br><span class="line">        ans=(n<span class="number">-1</span>)*a;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%I64d"</span>,ans);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(n!=<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%k==<span class="number">0</span>) &#123;</span><br><span class="line">            f2=n-(n/k);</span><br><span class="line">            <span class="keyword">if</span>(f2&gt;=kkk) &#123;</span><br><span class="line">                n=n/k;</span><br><span class="line">                ans+=b;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                n=n/k;</span><br><span class="line">                ans+=f2*a;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            aaa=n/k*k;</span><br><span class="line">            <span class="keyword">if</span>(aaa==<span class="number">0</span>) &#123;</span><br><span class="line">                ans+=(n<span class="number">-1</span>)*a;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ans+=a*(n-aaa);</span><br><span class="line">            n=aaa;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%I64d"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意当数据大的时候，每次减1的开销会T掉【爆了三发】，所以直接找到下一个可以被整除的位置即可。</p><h5 id="D-Alarm-Clock"><a href="#D-Alarm-Clock" class="headerlink" title="D. Alarm Clock"></a>D. Alarm Clock</h5><h6 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h6><p>有 <strong><em>n</em></strong> 个闹钟会在不同的时间响起，Vitalya会每熟睡 <strong><em>m</em></strong> 分钟后浅睡 <strong><em>n</em></strong> 分钟，要求关掉最少的闹钟使得在浅睡时间内不会被闹钟叫醒。（每个闹钟的响铃时间为1分钟）</p><h6 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h6><p>（类似《挑战》上的一道例题）为了去掉最少的点，每次都在最后的位置去掉点，这样能够保证去掉的点（可能）使得之后不会被叫醒。</p><h6 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m, k, res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> clocks[<span class="number">200010</span>];</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; que;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; clocks[i];</span><br><span class="line">    sort(clocks, clocks + n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="keyword">while</span> (!que.empty()&amp;&amp; clocks[i] - que.front() &gt;= m)</span><br><span class="line">            que.pop();</span><br><span class="line">        <span class="keyword">if</span> (que.size() &gt;= k - <span class="number">1</span>)</span><br><span class="line">            res += <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            que.push(clocks[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意  clocks[] 的数组大小，如果不直接开到最大的话容易RE</p><h5 id="E-Find-Amir"><a href="#E-Find-Amir" class="headerlink" title="E. Find Amir"></a>E. Find Amir</h5><p>太水了【】，一共 <strong><em>n</em></strong> 个节点，要遍历每个节点，并且不同下标的节点间的花销是<br>$$<br>(i+j) mod (n+1)<br>$$<br>求最小花销。</p><p>显然，前半部分和后半部分的节点一一配对就没有花销；两部分间调动的时候只需要配对节点的下一个就使得花销为1。只需要考虑偶数节点可以少走一次。</p><h6 id="AC代码-1"><a href="#AC代码-1" class="headerlink" title="AC代码"></a>AC代码</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span> (n%<span class="number">2</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; (n/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; (n/<span class="number">2</span>) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="H-Tennis-Championship"><a href="#H-Tennis-Championship" class="headerlink" title="H. Tennis Championship"></a>H. Tennis Championship</h5><p><del>打表大法好！</del></p><h6 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h6><p>每个选手只能和与他的比赛次数相差不超过 <strong><em>1</em></strong> 的人比赛，求冠军最多进行比赛场数；</p><h6 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h6><p>倒着想，冠军的场数是 <strong><em>n</em></strong> ,亚军的场次数即为 <strong><em>n-1</em></strong> ,所以可以倒退到每一个和冠军比赛的人场数都为 <strong><em>x-1</em></strong> ,其实就是一个斐波那契数列、</p><p>【可耻的直接打表了….莫得代码放</p><h4 id="场外：A-F"><a href="#场外：A-F" class="headerlink" title="场外：A, F"></a>场外：A, F</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script type=&quot;text/javascript&quot; src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;ECNU-XCPC-Training-o
      
    
    </summary>
    
    
      <category term="Greedy" scheme="imbazhang.github.io/tags/Greedy/"/>
    
  </entry>
  
  <entry>
    <title>my_test_site</title>
    <link href="imbazhang.github.io/2019/03/13/my-test-site/"/>
    <id>imbazhang.github.io/2019/03/13/my-test-site/</id>
    <published>2019-03-13T11:08:41.000Z</published>
    <updated>2019-03-14T13:15:28.805Z</updated>
    
    <content type="html"><![CDATA[<p>把旧的博客拆了重新，在Hexo框架下重新搭了个新的。</p><p>目前使用的是 <a href="https://github.com/yscoder/hexo-theme-indigo" target="_blank" rel="noopener">inidgo</a> 主题。</p><p>总之还是<del>贯彻摸鱼宗旨</del>，不过确实该有规律的写写东西了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;把旧的博客拆了重新，在Hexo框架下重新搭了个新的。&lt;/p&gt;
&lt;p&gt;目前使用的是 &lt;a href=&quot;https://github.com/yscoder/hexo-theme-indigo&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;inidgo&lt;/a&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="imbazhang.github.io/2019/03/13/hello-world/"/>
    <id>imbazhang.github.io/2019/03/13/hello-world/</id>
    <published>2019-03-13T11:03:33.639Z</published>
    <updated>2017-10-28T00:39:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
